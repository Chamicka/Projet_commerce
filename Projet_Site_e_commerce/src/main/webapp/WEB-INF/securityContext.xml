<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">


<!-- Déclaration d'un dataSource -->

	<context:property-placeholder location="classpath*:dataSource.properties" />
	<bean id="dataSourceBean2"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${toto.driver}" />
		<property name="url" value="${toto.url}" />
		<property name="username" value="${toto.user}" />
		<property name="password" value="${toto.mdp}" />

	</bean>
	
<!-- Partie des url protégés et les autorisations -->
	<security:http>


		<!-- Les url protégés et les autorisations -->
		<security:intercept-url pattern="/site/admin/**"
			access="ROLE_ADMIN_PROD" />
			
		<security:intercept-url pattern="/site/client/**"
			access="ROLE_CLIENT"/>

		<!-- utiliser un formulaire perso -->
		<security:form-login login-page="/login"
			authentication-failure-url="/loginEchec" />

		<!-- Pour se deconnecter -->
		<security:logout logout-success-url="/logout" />

		<!-- pour les accès non autorisés -->
		<security:access-denied-handler
			error-page="/denied" />

	</security:http>
	
	
	<!-- partie de l'authentification -->
	<security:authentication-manager>
		<security:authentication-provider>


			<!-- Utilisation de la base de données pour récupérer Identifiants, mots 
				de passe et roles -->
			<security:jdbc-user-service
				data-source-ref="dataSourceBean2"
				users-by-username-query="select username,password,activated from admins where username=?"
				authorities-by-username-query="select a.username,r.rolename from admins a, roles r where a.id_ad=r.admin_id and a.username=?" />

		</security:authentication-provider>
		
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSourceBean2"
				users-by-username-query="select mail,password,activated from clients where mail=?"
				authorities-by-username-query="select cl.mail,r.rolename from clients cl, roles r where cl.id_cl=r.client_id and cl.mail=?" />
		
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
